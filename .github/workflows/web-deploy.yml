name: Build Flutter Web â†’ webhost/ (main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write   # allow this workflow to commit to main

jobs:
  build-and-stage:
    runs-on: ubuntu-latest
    env:
      API_URL: ${{ secrets.WEB_API_URL }}   # you already added this secret

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Enable web & get deps
        run: |
          flutter config --enable-web
          flutter pub get
          flutter --version

      - name: Build web (release)
        run: flutter build web --release --dart-define=API_URL=${{ secrets.WEB_API_URL }}

      # Safety net: create runtime files at repo root if missing
      - name: Ensure server.js and package.json exist
        run: |
          if [ ! -f server.js ]; then
            cat > server.js <<'JS'
const express = require("express");
const path = require("path");
const app = express();
const PORT = process.env.PORT || 8080;
const WEB_ROOT = path.join(__dirname, "public");
app.use(express.static(WEB_ROOT, { maxAge: "7d", immutable: true }));
app.get("*", (_, res) => res.sendFile(path.join(WEB_ROOT, "index.html")));
app.listen(PORT, () => console.log(`PotBot web listening on ${PORT}`));
JS
          fi
          if [ ! -f package.json ]; then
            cat > package.json <<'JSON'
{
  "name": "potbot-web",
  "private": true,
  "main": "server.js",
  "scripts": { "start": "node server.js" },
  "dependencies": { "express": "^4.19.2" },
  "engines": { "node": ">=18" }
}
JSON
          fi

      - name: Stage runtime into webhost/
        run: |
          mkdir -p webhost/public
          rm -rf webhost/*
          mkdir -p webhost/public
          cp -r build/web/* webhost/public/
          cp server.js webhost/
          cp package.json webhost/
          echo "web: node server.js" > webhost/Procfile
          echo "=== webhost/ listing ==="
          ls -la webhost
          echo "=== webhost/public/ listing (first 50) ==="
          ls -la webhost/public | head -50

      # Ensure git will track webhost even if .gitignore excludes it
      - name: Allow tracking of webhost in .gitignore
        run: |
          if [ -f .gitignore ]; then
            echo "" >> .gitignore
            echo "# allow CI-managed webhost" >> .gitignore
            echo "!webhost/**" >> .gitignore
          fi

      - name: Commit webhost/ to main
        run: |
          git add -f webhost
          git status
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "ci: update webhost from Flutter build" || echo "No changes to commit"
          git push