# --- Nixpacks config for Flutter web + Node host ---

[phases.setup]
# tools we need during build
nixPkgs = ["bash", "curl", "unzip", "git", "nodejs_20"]

[phases.install]
# Install Flutter 3.35.1 (Dart 3.9) into /opt/flutter and put it on PATH
cmds = [
  'set -eux',
  'FLUTTER_VERSION=3.35.1',
  'FLUTTER_URL=https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz',
  'mkdir -p /opt',
  'curl -fsSL "$FLUTTER_URL" -o /tmp/flutter.tar.xz',
  'tar -xf /tmp/flutter.tar.xz -C /opt',
  'export PATH=/opt/flutter/flutter/bin:$PATH',
  # make sure web is enabled & doctor runs
  'flutter config --enable-web',
  'flutter doctor -v',
  # get pub dependencies
  'flutter pub get'
]

[phases.build]
# Build the Flutter web app; pass backend URL at build time if you
# want it compiled in (optional)
cmds = [
  'export PATH=/opt/flutter/flutter/bin:$PATH',
  # If you want to inject the Railway env var POTBOT_API_URL into the build:
  # 'flutter build web --release --dart-define=API_URL=${POTBOT_API_URL}',
  'flutter build web --release',
  # Install Node deps to serve the build (server.js + express)
  'npm ci || npm i'
]

[start]
# Serve compiled web via our Node server
cmd = "node server.js"

# Make sure Nixpacks keeps these in the final image
includes = ["build/web", "server.js", "package.json"]
